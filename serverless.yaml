service: bydelsfakta-api

frameworkVersion: ">=1.50.0 <2.0.0"

provider:
  name: aws
  runtime: python3.7
  region: ${opt:region, 'eu-west-1'}
  stage: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ok-origo-dataplatform-config-${self:provider.stage}
    serverSideEncryption: AES256
  deploymentPrefix: deploy
  environment:
    METADATA_API_URL: ${ssm:/dataplatform/metadata-api/url}
    STAGE: ${self:provider.stage}
    GIT_REV: ${git:branch}:${git:sha1}
  tracing:
    lambda: true
    apiGateway: true
  apiGateway:
    minimumCompressionSize: 1024
  iamManagedPolicies:
    - Fn::Join:
      - ':'
      - - 'arn:aws:iam:'
        - Ref: AWS::AccountId
        - 'policy/bydelsfakta-api-policy'
    - Fn::Join:
      - ':'
      - - 'arn:aws:iam::aws'
        - 'policy/AWSXRayDaemonWriteAccess'
  tags:
    GIT_REV: ${git:branch}:${git:sha1}

plugins:
  - serverless-aws-documentation
  - serverless-python-requirements
  - serverless-pseudo-parameters
  - serverless-plugin-git-variables

package:
  exclude:
    - "./**"
  include:
    - main.py

functions:
  get_dataset: ${file(serverless/functions/get_dataset.yaml)}

resources:
  Description: >
    ${self:service} ${git:branch}:${git:sha1}

    ${git:message}

custom:
  documentation:
    title: ${self:service}
    version: 0.1.1
    summary: ${self:service} API
    description: Fetch bydelsfakta.
    models:
      - ${file(./serverless/models/Response.yaml)}
      - ${file(./serverless/models/awsError.yaml)}
  pythonRequirements:
    dockerizePip: non-linux
    layer: true
    slim: true
    usePoetry: false
  exportGitVariables: false